
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      // Check for the custom claim 'admin' on the user's token.
      return isAuthenticated() && request.auth.token.admin == true;
    }
    
    // Validation function for new anime data
    function isNewAnimeDataValid() {
        let data = request.resource.data;
        return data.title is string && data.title.size() > 0 &&
               data.description is string && data.description.size() > 0 &&
               data.streamUrl is string && data.streamUrl.matches('https?://.+') &&
               data.coverImageUrl is string && data.coverImageUrl.matches('https?://.+') &&
               data.genres is list && data.genres.size() > 0 &&
               data.episodes is number && data.episodes > 0 &&
               (!('rating' in data) || data.rating is number) &&
               request.resource.data.createdAt is timestamp &&
               request.resource.data.updatedAt is timestamp;
    }
    
    // Validation function for updated anime data
    function isUpdatedAnimeDataValid() {
        let data = request.resource.data;
        return (!('title' in data) || (data.title is string && data.title.size() > 0)) &&
               (!('description' in data) || (data.description is string && data.description.size() > 0)) &&
               (!('streamUrl' in data) || (data.streamUrl is string && data.streamUrl.matches('https?://.+'))) &&
               (!('coverImageUrl' in data) || (data.coverImageUrl is string && data.coverImageUrl.matches('https?://.+'))) &&
               (!('genres' in data) || (data.genres is list && data.genres.size() > 0)) &&
               (!('episodes' in data) || (data.episodes is number && data.episodes > 0)) &&
               (!('rating' in data) || data.rating is number) &&
               data.updatedAt == request.time;
    }

    // Rules for the 'animes' collection
    match /animes/{animeId} {
      // ANYONE can read the list of animes or a single anime document.
      allow read: if true;

      // ONLY ADMINS can create, update, or delete anime documents.
      allow create: if isAdmin() && isNewAnimeDataValid();
      allow update: if isAdmin() && isUpdatedAnimeDataValid();
      allow delete: if isAdmin();
    }
  }
}
